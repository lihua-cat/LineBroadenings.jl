"""
    profile_pressure(ŒΩ; ŒΩ0, ŒΩp)

line profile of pressure broadening (Lorentz profile).

# Arguments
- `ŒΩ`: target wavelength or wavenumber
- `ŒΩ0`: central wavelength or wavenumber
- `ŒΩp`: FWHM of pressure broadening
"""
function profile_pressure(ŒΩ; ŒΩ0, ŒΩp)
    u = unit(ŒΩ)
    ŒΩ0, ŒΩp = uconvert.(u, (ŒΩ0, ŒΩp))
    ŒΩ, ŒΩ0, ŒΩp = ustrip.((ŒΩ, ŒΩ0, ŒΩp))
    d_l = Lorentz(ŒΩ0, ŒΩp / W_L)
    pdf(d_l, ŒΩ) / u
end

"""
    profile_doppler(ŒΩ; ŒΩ0, ŒΩd)

line profile of Doppler broadening (Gaussian profile).

# Arguments
- `ŒΩ`: target wavelength or wavenumber
- `ŒΩ0`: central wavelength or wavenumber
- `ŒΩd`: FWHM of Doppler broadening
"""
function profile_doppler(ŒΩ; ŒΩ0, ŒΩd)
    u = unit(ŒΩ)
    ŒΩ0, ŒΩd = uconvert.(u, (ŒΩ0, ŒΩd))
    ŒΩ, ŒΩ0, ŒΩd = ustrip.((ŒΩ, ŒΩ0, ŒΩd))
    d_g = Gaussian(ŒΩ0, ŒΩd / W_G)
    pdf(d_g, ŒΩ) / u
end

"""
    profile_voigt(ŒΩ; ŒΩ0, ŒΩd, ŒΩp)

line profile of combined Doppler and pressure broadenings (Voigt profile).

# Arguments
- `ŒΩ`: target wavelength or wavenumber
- `ŒΩ0`: central wavelength or wavenumber
- `ŒΩd`: FWHM of Doppler broadening
- `ŒΩp`: FWHM of pressure broadening
"""
function profile_voigt(ŒΩ; ŒΩ0, ŒΩd, ŒΩp)
    u = unit(ŒΩ)
    ŒΩ0, ŒΩd, ŒΩp = uconvert.(u, (ŒΩ0, ŒΩd, ŒΩp))
    ŒΩ, ŒΩ0, ŒΩp, ŒΩd = ustrip.((ŒΩ, ŒΩ0, ŒΩp, ŒΩd))
    d_v = Voigt(ŒΩ0, ŒΩd / W_G, ŒΩp / W_L)
    pdf(d_v, ŒΩ) / u
end

@doc raw"""
    fwhm_pressure(P, Œ≥)

FWHM of pressure broadening.

```math
\nu_p = 2 \sum P \cdot Œ≥
```

# Arguments
- `P::Pressure`: pressure
- `Œ≥`: pressure broadening coefficients of HWHM
"""
fwhm_pressure(P::Pressure, Œ≥) = 2 * sum(P .* Œ≥)

@doc raw"""

    fwhm_doppler(ŒΩ0, M, T)

FWHM of Doppler broadening.

```math
\nu_d = \sqrt{\frac{8kT\ln{2}}{Mc^2}}\nu_0
```

# Arguments
- `ŒΩ0`: central wavelength or wavenumber
- `M`: atomic weight
- `T`: temperature in Kelvin
"""
function fwhm_doppler(ŒΩ0, M::Mass, T::AbsoluteScaleTemperature)
    uconvert(unit(ŒΩ0), ‚àö(8ùëò * T * log(2) / M / ùëê^2) * ŒΩ0)
end

"approx fwhm of Voigt profile"
fwhm_voigt_approx(ŒΩd, ŒΩc) = uconvert(unit(ŒΩd), 0.5346ŒΩc + ‚àö(0.2166ŒΩc^2 + ŒΩd^2))
